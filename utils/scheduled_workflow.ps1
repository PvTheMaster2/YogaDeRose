# Scheduled Workflow for Yoga Notes Maintenance
# This script sets up a scheduled task to run the MOC update and auto-link provider scripts monthly
# Author: Claude
# Created: 2025-04-18

# Configuration
$rootDir = "C:\Users\pedro\OneDrive\Área de Trabalho\YOGA TRATADO"
$scriptsDir = Join-Path $rootDir "00 - INBOX\03 - SCRIPTS"
$mocScriptPath = Join-Path $scriptsDir "moc_update_workflow.ps1"
$autoLinkScriptPath = Join-Path $scriptsDir "create_auto_link_provider.ps1"
$logDir = Join-Path $rootDir "00 - INBOX\04 - LOGS"
$logFile = Join-Path $logDir "scheduled_workflow_log.txt"

# Create the necessary directories if they don't exist
if (!(Test-Path $scriptsDir)) {
    New-Item -ItemType Directory -Path $scriptsDir -Force | Out-Null
}

if (!(Test-Path $logDir)) {
    New-Item -ItemType Directory -Path $logDir -Force | Out-Null
}

# Copy the scripts to the scripts directory
Copy-Item -Path "moc_update_workflow.ps1" -Destination $mocScriptPath -Force
Copy-Item -Path "create_auto_link_provider.ps1" -Destination $autoLinkScriptPath -Force

# Create a wrapper script that will run both scripts and log the output
$wrapperScriptPath = Join-Path $scriptsDir "run_monthly_maintenance.ps1"

$wrapperScript = @"
# Monthly Maintenance Script for Yoga Notes
# This script runs both the MOC update and auto-link provider scripts
# Generated by the scheduled_workflow.ps1 script
# Created: $(Get-Date -Format "yyyy-MM-dd")

# Log file setup
`$logFile = "$logFile"
`$timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
`$separator = "`r`n" + "-" * 80 + "`r`n"

# Start logging
Add-Content -Path `$logFile -Value "`$separator`r`nYoga Notes Maintenance - Started at `$timestamp`r`n`$separator"

# Run the MOC update workflow
Add-Content -Path `$logFile -Value "Running MOC update workflow..."
try {
    `$mocOutput = & "$mocScriptPath" 2>&1
    Add-Content -Path `$logFile -Value `$mocOutput
    Add-Content -Path `$logFile -Value "MOC update completed successfully.`r`n"
} catch {
    Add-Content -Path `$logFile -Value "Error running MOC update: `$_`r`n"
}

# Run the auto-link provider creation
Add-Content -Path `$logFile -Value "Running auto-link provider creation..."
try {
    `$autoLinkOutput = & "$autoLinkScriptPath" 2>&1
    Add-Content -Path `$logFile -Value `$autoLinkOutput
    Add-Content -Path `$logFile -Value "Auto-link provider creation completed successfully.`r`n"
} catch {
    Add-Content -Path `$logFile -Value "Error creating auto-link provider: `$_`r`n"
}

# Complete logging
`$endTimestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
Add-Content -Path `$logFile -Value "`$separator`r`nYoga Notes Maintenance - Completed at `$endTimestamp`r`n`$separator"
"@

# Write the wrapper script to a file
$wrapperScript | Out-File -FilePath $wrapperScriptPath -Encoding utf8

# Function to create a scheduled task
function Create-ScheduledTask {
    $taskName = "YogaNotesMaintenance"
    $taskDescription = "Monthly maintenance of Yoga notes - updates MOC and auto-link provider"
    $taskAction = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-NoProfile -ExecutionPolicy Bypass -File `"$wrapperScriptPath`""
    
    # Schedule to run on the 1st of each month at 3:00 AM
    $taskTrigger = New-ScheduledTaskTrigger -Monthly -DaysOfMonth 1 -At "03:00"
    
    # Only run when user is logged on
    $taskSettings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -StartWhenAvailable
    
    # Create or update the task
    $existingTask = Get-ScheduledTask -TaskName $taskName -ErrorAction SilentlyContinue
    
    if ($existingTask) {
        # Update existing task
        Set-ScheduledTask -TaskName $taskName -Action $taskAction -Trigger $taskTrigger -Settings $taskSettings -Description $taskDescription
        Write-Host "Updated existing scheduled task: $taskName"
    } else {
        # Create new task
        Register-ScheduledTask -TaskName $taskName -Action $taskAction -Trigger $taskTrigger -Settings $taskSettings -Description $taskDescription
        Write-Host "Created new scheduled task: $taskName"
    }
}

# Function to run the scripts immediately
function Run-ScriptsNow {
    Write-Host "Running scripts now for initial setup..."
    
    # Run the MOC update workflow
    Write-Host "`nRunning MOC update workflow..."
    & $mocScriptPath
    
    # Run the auto-link provider creation
    Write-Host "`nRunning auto-link provider creation..."
    & $autoLinkScriptPath
    
    Write-Host "`nInitial setup complete."
}

# Main execution
Write-Host "Setting up scheduled workflow for Yoga notes maintenance..."

# Create the scheduled task
Create-ScheduledTask

# Run the scripts now for initial setup
$runNow = Read-Host "Would you like to run the maintenance scripts now? (Y/N)"
if ($runNow -eq "Y" -or $runNow -eq "y") {
    Run-ScriptsNow
}

# Display summary
Write-Host @"

SETUP COMPLETE
--------------
The maintenance workflow has been scheduled to run monthly (on the 1st of each month at 3:00 AM).

Scripts location: $scriptsDir
Log file: $logFile

Next steps:
1. The MOC will be automatically updated with new notes each month
2. The auto-link provider will be refreshed to include new notes
3. Check the log file periodically to ensure the scripts are running correctly

You can manually run the maintenance at any time by executing:
$wrapperScriptPath
"@ 